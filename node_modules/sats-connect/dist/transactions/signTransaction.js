"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signTransaction = void 0;
const jsontokens_1 = require("jsontokens");
const provider_1 = require("../provider");
const signTransaction = async (options) => {
    const provider = await (0, provider_1.getProviderOrThrow)(options.getProvider);
    const { psbtBase64, inputsToSign } = options.payload;
    if (!psbtBase64) {
        throw new Error('A value for psbtBase64 representing the tx hash is required');
    }
    if (!inputsToSign) {
        throw new Error('An array specifying the inputs to be signed by the wallet is required');
    }
    try {
        const request = (0, jsontokens_1.createUnsecuredToken)(options.payload);
        const response = await provider.signTransaction(request);
        options.onFinish?.(response);
    }
    catch (error) {
        console.error('[Connect] Error during sign transaction request', error);
        options.onCancel?.();
    }
};
exports.signTransaction = signTransaction;
//# sourceMappingURL=signTransaction.js.map