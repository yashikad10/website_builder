"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletProvider = exports.hasEventsFeature = void 0;
const react_1 = __importStar(require("react"));
const useWallet_js_1 = require("./useWallet.js");
/** TODO: docs */
function hasEventsFeature(features) {
    return 'standard:events' in features;
}
exports.hasEventsFeature = hasEventsFeature;
/** TODO: docs */
const WalletProvider = ({ children }) => {
    const [wallet, setWallet] = (0, react_1.useState)(null);
    const [{ version, name, icon, chains, features, accounts }, setWalletProperties] = (0, react_1.useState)(() => (0, useWallet_js_1.getWalletProperties)(wallet));
    // When the wallet changes, set properties.
    (0, react_1.useEffect)(() => setWalletProperties((0, useWallet_js_1.getWalletProperties)(wallet)), [wallet]);
    // When the features change, listen for property changes if the wallet supports it.
    (0, react_1.useEffect)(() => {
        if (hasEventsFeature(features))
            return features['standard:events'].on('change', (properties) => setWalletProperties((currentProperties) => (Object.assign(Object.assign({}, currentProperties), properties))));
    }, [features]);
    return (react_1.default.createElement(useWallet_js_1.WalletContext.Provider, { value: {
            wallet,
            setWallet,
            version,
            name,
            icon,
            chains,
            features,
            accounts,
        } }, children));
};
exports.WalletProvider = WalletProvider;
//# sourceMappingURL=WalletProvider.js.map