"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StacksTestnet = exports.StacksMainnet = void 0;
const constants_1 = require("./constants");
class StacksMainnet {
    constructor() {
        this.version = constants_1.TransactionVersion.Mainnet;
        this.chainId = constants_1.ChainID.Mainnet;
        this.coreApiUrl = 'https://core.blockstack.org';
        this.broadcastEndpoint = '/v2/transactions';
        this.transferFeeEstimateEndpoint = '/v2/fees/transfer';
        this.accountEndpoint = '/v2/accounts';
        this.contractAbiEndpoint = '/v2/contracts/interface';
        this.readOnlyFunctionCallEndpoint = '/v2/contracts/call-read';
        this.getBroadcastApiUrl = () => `${this.coreApiUrl}${this.broadcastEndpoint}`;
        this.getTransferFeeEstimateApiUrl = () => `${this.coreApiUrl}${this.transferFeeEstimateEndpoint}`;
        this.getAccountApiUrl = (address) => `${this.coreApiUrl}${this.accountEndpoint}/${address}?proof=0`;
        this.getAbiApiUrl = (address, contract) => `${this.coreApiUrl}${this.contractAbiEndpoint}/${address}/${contract}`;
        this.getReadOnlyFunctionCallApiUrl = (contractAddress, contractName, functionName) => `${this.coreApiUrl}${this.readOnlyFunctionCallEndpoint}/${contractAddress}/${contractName}/${encodeURIComponent(functionName)}`;
    }
}
exports.StacksMainnet = StacksMainnet;
class StacksTestnet extends StacksMainnet {
    constructor() {
        super(...arguments);
        this.version = constants_1.TransactionVersion.Testnet;
        this.chainId = constants_1.ChainID.Testnet;
        this.coreApiUrl = 'http://testnet-master.blockstack.org:20443';
    }
}
exports.StacksTestnet = StacksTestnet;
//# sourceMappingURL=network.js.map