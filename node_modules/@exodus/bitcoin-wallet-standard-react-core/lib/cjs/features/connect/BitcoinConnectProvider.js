"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BitcoinConnectProvider = exports.hasBitcoinConnectFeature = void 0;
const bitcoin_wallet_standard_features_1 = require("@exodus/bitcoin-wallet-standard-features");
const react_1 = require("@wallet-standard/react");
const react_2 = __importStar(require("react"));
const useBitcoinConnect_js_1 = require("./useBitcoinConnect.js");
function hasBitcoinConnectFeature(features) {
    return bitcoin_wallet_standard_features_1.BitcoinConnect in features;
}
exports.hasBitcoinConnectFeature = hasBitcoinConnectFeature;
const BitcoinConnectProvider = ({ children, onError }) => {
    const { features } = (0, react_1.useWallet)();
    // Handle errors, logging them by default.
    const handleError = (0, react_2.useCallback)((error) => {
        (onError || console.error)(error);
        return error;
    }, [onError]);
    // Connect to the wallet.
    const [waiting, setWaiting] = (0, react_2.useState)(false);
    const promise = (0, react_2.useRef)();
    const connect = (0, react_2.useMemo)(() => hasBitcoinConnectFeature(features)
        ? (input) => __awaiter(void 0, void 0, void 0, function* () {
            // If already waiting, wait for that promise to resolve.
            if (promise.current) {
                try {
                    yield promise.current;
                }
                catch (error) {
                    // Error will already have been handled below.
                }
            }
            setWaiting(true);
            try {
                promise.current = features[bitcoin_wallet_standard_features_1.BitcoinConnect].connect(input);
                return yield promise.current;
            }
            catch (error) {
                throw handleError(error);
            }
            finally {
                setWaiting(false);
                promise.current = undefined;
            }
        })
        : undefined, [features, promise, handleError]);
    return (react_2.default.createElement(useBitcoinConnect_js_1.BitcoinConnectContext.Provider, { value: {
            waiting,
            connect,
        } }, children));
};
exports.BitcoinConnectProvider = BitcoinConnectProvider;
//# sourceMappingURL=BitcoinConnectProvider.js.map