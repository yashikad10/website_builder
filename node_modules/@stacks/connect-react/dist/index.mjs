import C, { createContext, useContext, useReducer } from 'react';
import { authenticate, showBlockstackConnect, openContractCall, openContractDeploy, openSTXTransfer, openProfileUpdateRequestPopup, openSignTransaction, openSignatureRequestPopup, openStructuredDataSignatureRequestPopup, openPsbtRequestPopup } from '@stacks/connect';
export * from '@stacks/connect';

var _=Object.defineProperty,I=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var O=Object.getOwnPropertySymbols;var H=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var S=(n,e,r)=>e in n?_(n,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[e]=r,a=(n,e)=>{for(var r in e||(e={}))H.call(e,r)&&S(n,r,e[r]);if(O)for(var r of O(e))N.call(e,r)&&S(n,r,e[r]);return n},s=(n,e)=>I(n,E(e));var D={isOpen:!1,isAuthenticating:!1,authData:void 0,userSession:void 0,authOptions:{redirectTo:"",manifestPath:"",onFinish:()=>null,authOrigin:void 0,sendToSignIn:!1,appDetails:{name:"",icon:""}}},$=(n,{type:e,payload:r})=>{switch(e){case"data/update-auth-options":return s(a({},n),{authOptions:a(a({},n.authOptions),r)});default:throw new Error(`Unhandled action type: ${e}`)}},c=createContext(D),d=createContext(void 0),g=({authOptions:n,children:e})=>{let[r,t]=useReducer($,D);return C.createElement(c.Provider,{value:s(a({},r),{authOptions:n})},C.createElement(d.Provider,{value:t},e))};var z=({authOptions:n,children:e})=>C.createElement(g,{authOptions:n},e);var Z=()=>{let n=useContext(d);if(!n)throw new Error("This must be used within the ConnectProvider component.");return n},tt=()=>{let{isOpen:n,isAuthenticating:e,authData:r,authOptions:t,userSession:T}=useContext(c),A=Z(),m=o=>A({type:"data/update-auth-options",payload:o}),v=(o,i,u)=>{if(o){let p=s(a(a({},t),i),{onFinish:w=>{var l;(l=t.onFinish)==null||l.call(t,w);},sendToSignIn:!0});authenticate(p,u);return}else showBlockstackConnect(s(a({},t),{sendToSignIn:!1}));t&&m(t);},y=(o={},i)=>{authenticate(s(a(a({},t),o),{onFinish:u=>{var p;(p=t.onFinish)==null||p.call(t,u);}}),i);};function R(o,i){return openContractCall(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function x(o,i){return openContractDeploy(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function U(o,i){return openSTXTransfer(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function k(o,i){return openProfileUpdateRequestPopup(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function q(o,i){return openSignTransaction(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function F(o,i){return openSignatureRequestPopup(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function b(o,i){return openStructuredDataSignatureRequestPopup(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}function X(o,i){return openPsbtRequestPopup(s(a({},o),{authOrigin:t.authOrigin,appDetails:t.appDetails}),i)}return {isOpen:n,isAuthenticating:e,authData:r,authOptions:t,userSession:T,doOpenAuth:v,doAuth:y,authenticate:authenticate,doContractCall:R,doContractDeploy:x,doSTXTransfer:U,doSignTransaction:q,doProfileUpdate:k,sign:F,signStructuredData:b,signPsbt:X}};

export { z as Connect, tt as useConnect };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.mjs.map